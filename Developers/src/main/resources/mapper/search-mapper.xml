<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="search">
	<!-- 직업분야리스트 -->
	<select id="jobfieldList" resultType="jobfield">
		SELECT * FROM JOB_FIELD
	</select>
	<!-- 직업분야리스트(Ajax) -->
	<select id="jobfieldAjaxList" resultType="jobfield" parameterType="string">
		SELECT * FROM JOB_FIELD WHERE JOB_NAME NOT IN (#{jobName})
	</select>
	<!-- 탐색페이지(포지션리스트) -->
	<select id="positionList" resultType="position">
		SELECT P.*, BUS_LOGO, BUS_IMAGES, BUS_ADDRESS, BUS_INDUSTRIAL, BUS_AREA, BUS_COUNTRY, (SELECT COUNT(*) FROM PO_LIKE WHERE LIKE_ID = P.LIKE_ID) AS LIKE_COUNT FROM ENROLL_POSITION P JOIN BUSINESS_INFO B ON P.BUS_NO = B.BUS_NO WHERE SYSDATE <![CDATA[<]]> DEAD_DATE AND STATUS = 'Y' ORDER BY POSITION_NO DESC
	</select>
	<!-- 포지션정보페이지(포지션정보 -->
	<select id="companyInfoList" resultType="position" parameterType="_int" resultMap="positionArray">
		SELECT P.*, BUS_LOGO, BUS_IMAGES, BUS_ADDRESS, BUS_INDUSTRIAL, BUS_AREA, BUS_COUNTRY,(SELECT COUNT(*) FROM PO_LIKE WHERE LIKE_ID = P.LIKE_ID) AS LIKE_COUNT FROM ENROLL_POSITION P JOIN BUSINESS_INFO B ON P.BUS_NO = B.BUS_NO WHERE POSITION_NO = #{positionNo} AND STATUS = 'Y'
	</select>
	<!-- 포지션정보페이지(좋아요정보) -->
	<select id="likeMemberList" resultType="likemember" parameterType="_int">
		SELECT P.*, MEM_NAME, MEM_PHOTO FROM PO_LIKE P JOIN TA_MEMBER M ON P.MEM_NO = M.MEM_NO WHERE LIKE_ID = #{likeNo} ORDER BY LIKE_NO DESC
	</select>
	<!-- 적극채용중인 회사 리스트 -->
	<select id="firstPsList" resultType="position" resultMap="positionArray">
		SELECT * FROM (SELECT ROWNUM AS RNUM, A.* FROM (SELECT (SELECT COUNT(BUS_NO) FROM ENROLL_POSITION) AS PO_COUNT, P.*, BUS_LOGO, BUS_IMAGES, BUS_ADDRESS, BUS_INDUSTRIAL, BUS_AREA, BUS_COUNTRY,(SELECT COUNT(*) FROM PO_LIKE WHERE LIKE_ID = P.LIKE_ID) AS LIKE_COUNT FROM ENROLL_POSITION P JOIN BUSINESS_INFO B ON P.BUS_NO = B.BUS_NO WHERE SYSDATE <![CDATA[<]]> DEAD_DATE AND STATUS = 'Y' ORDER BY 1)A) WHERE RNUM BETWEEN 1 AND 5
	</select>
	<!-- 회원의 좋아요 여부 -->
	<select id="selectLikeMemberOne" resultType="likemember" parameterType="map">
		SELECT P.*, M.MEM_NAME AS MEM_NAME, M.MEM_PHOTO AS MEM_PHOTO FROM PO_LIKE P JOIN TA_MEMBER M ON P.MEM_NO = M.MEM_NO WHERE P.LIKE_ID = #{likeId} AND P.MEM_NO = #{memNo}
	</select>
	<!-- 포지션 글 좋아요 회원 추가 -->
	<insert id="insertLikeButton" parameterType="map">
		INSERT INTO PO_LIKE VALUES(PO_LIKE_SEQ.NEXTVAL, #{likeId}, #{memNo})
	</insert>
	<!-- 포지션 글 좋아요 갯수 -->
	<select id="selectLikeCount" parameterType="_int" resultType="_int">
		SELECT COUNT(LIKE_ID) FROM PO_LIKE WHERE LIKE_ID = #{likeId}
	</select>
	<!-- 포지션 글 좋아요 회원 삭제 -->
	<delete id="deleteLikeButton" parameterType="map">
		DELETE FROM PO_LIKE WHERE MEM_NO = #{memNo} AND LIKE_ID = #{likeId}
	</delete>
	<!-- 직무분야검색했을 때의 포지션 리스트 -->
	<select id="positionAjaxList" parameterType="string" resultType="position">
		SELECT P.*, BUS_LOGO, BUS_IMAGES, BUS_ADDRESS, BUS_INDUSTRIAL, BUS_AREA, BUS_COUNTRY,(SELECT COUNT(*) FROM PO_LIKE WHERE LIKE_ID = P.LIKE_ID) AS LIKE_COUNT FROM ENROLL_POSITION P JOIN BUSINESS_INFO B ON P.BUS_NO = B.BUS_NO WHERE JOB_TYPE IN (#{jobName}) AND SYSDATE <![CDATA[<]]> DEAD_DATE AND STATUS = 'Y' ORDER BY POSITION_NO DESC
	</select>
	<!-- 회원 필터검색 -->
	<select id="SelectMemberFilter" parameterType="_int" resultType="filter">
		SELECT F.* FROM TA_MEMBER T JOIN MEM_FILTER F ON T.FILTER_ID = F.FILTER_ID WHERE MEM_NO = #{memNo}
	</select>
	<!-- 필터 적용한 포지션리스트 -->
	<select id="positionLoginList" parameterType="filter" resultType="position">
		SELECT P.*, BUS_LOGO, BUS_IMAGES, BUS_ADDRESS, BUS_INDUSTRIAL, BUS_AREA, BUS_COUNTRY,(SELECT COUNT(*) FROM PO_LIKE WHERE LIKE_ID = P.LIKE_ID) AS LIKE_COUNT FROM ENROLL_POSITION P JOIN BUSINESS_INFO B ON P.BUS_NO = B.BUS_NO WHERE SYSDATE <![CDATA[<]]> DEAD_DATE AND STATUS = 'Y'
		<choose>
			<when test="country.equals('한국')">
				AND BUS_COUNTRY = #{country} 
				<choose>
					<when test="location.equals('전국')"></when>
					<otherwise>
						AND BUS_AREA = #{location}
					</otherwise>
				</choose>
			</when>
			<otherwise>
				AND BUS_COUNTRY = #{country}
			</otherwise>
		</choose>
		<choose>
			<when test="career.equals('전체')"></when>
			<otherwise>
				AND CAREER = #{career}
			</otherwise>
		</choose>
		<if test="job_sort.equals('최신순')">
			ORDER BY POSITION_NO DESC	
		</if>
		<if test="job_sort.equals('보상금순')">
			ORDER BY POSITION_NO DESC	
		</if>
		<if test="job_sort.equals('인기순')">
			ORDER BY LIKE_COUNT DESC	
		</if>
	</select>
	<!-- 직무분야 검색 시의 포지션리스트(로그인)필터조건까지 -->
	<select id="positionAjaxLoginList" resultType="position" parameterType="map">
		SELECT P.*, BUS_LOGO, BUS_IMAGES, BUS_ADDRESS, BUS_INDUSTRIAL, BUS_AREA, BUS_COUNTRY,(SELECT COUNT(*) FROM PO_LIKE WHERE LIKE_ID = P.LIKE_ID) AS LIKE_COUNT FROM ENROLL_POSITION P JOIN BUSINESS_INFO B ON P.BUS_NO = B.BUS_NO WHERE SYSDATE <![CDATA[<]]> DEAD_DATE AND JOB_TYPE IN (#{jobName}) AND STATUS = 'Y'
		<choose>
			<when test="(filter.country).equals('한국')">
				AND BUS_COUNTRY = #{filter.country} 
				<choose>
					<when test="(filter.location).equals('전국')"></when>
					<otherwise>
						AND BUS_AREA = #{filter.location}
					</otherwise>
				</choose>
			</when>
			<otherwise>
				AND BUS_COUNTRY = #{filter.country}
			</otherwise>
		</choose>
		<choose>
			<when test="(filter.career).equals('전체')"></when>
			<otherwise>
				AND CAREER = #{career}
			</otherwise>
		</choose>
		<if test="(filter.job_sort).equals('최신순')">
			ORDER BY POSITION_NO DESC	
		</if>
		<if test="(filter.job_sort).equals('보상금순')">
			ORDER BY POSITION_NO DESC	
		</if>
		<if test="(filter.job_sort).equals('인기순')">
			ORDER BY LIKE_COUNT DESC	
		</if>
	</select>
	<!-- 필터 조건리스트 검색 -->
	<select id="selectFilterOrderType" resultType="filterordertype">
		SELECT * FROM ORDER_TYPE
	</select>
	<select id="selectFilterCountry" resultType="filtercountry">
		SELECT * FROM FILTER_COUNTRY
	</select>
	<select id="selectFilterLocation" resultType="filterlocation">
		SELECT * FROM FILTER_LOCATION
	</select>
	<select id="selectFilterCareer" resultType="filtercareer">
		SELECT * FROM FILTER_CAREER
	</select>
	<!-- 필터변경적용한 포지션리스트 -->
	<select id="positionLoginFilterList" parameterType="map" resultType="position">
		SELECT P.*, BUS_LOGO, BUS_IMAGES, BUS_ADDRESS, BUS_INDUSTRIAL, BUS_AREA, BUS_COUNTRY,(SELECT COUNT(*) FROM PO_LIKE WHERE LIKE_ID = P.LIKE_ID) AS LIKE_COUNT FROM ENROLL_POSITION P JOIN BUSINESS_INFO B ON P.BUS_NO = B.BUS_NO WHERE SYSDATE <![CDATA[<]]> DEAD_DATE AND STATUS = 'Y'
		<choose>
			<when test="country.equals('한국')">
				AND BUS_COUNTRY = #{country} 
				<choose>
					<when test="location.equals('전국')"></when>
					<otherwise>
						AND BUS_AREA = #{location}
					</otherwise>
				</choose>
			</when>
			<otherwise>
				AND BUS_COUNTRY = #{country}
			</otherwise>
		</choose>
		<choose>
			<when test="career.equals('전체')"></when>
			<otherwise>
				AND CAREER = #{career}
			</otherwise>
		</choose>
		<if test="order.equals('최신순')">
			ORDER BY POSITION_NO DESC	
		</if>
		<if test="order.equals('보상금순')">
			ORDER BY POSITION_NO DESC	
		</if>
		<if test="order.equals('인기순')">
			ORDER BY LIKE_COUNT DESC	
		</if> 
	</select>
	<!-- 회원필터변경저장 -->
	<update id="updateMemFilter" parameterType="map">
		UPDATE MEM_FILTER SET JOB_SORT = #{order}, COUNTRY = #{country}, LOCATION = #{location}, CAREER = #{career} WHERE FILTER_ID = (SELECT FILTER_ID FROM TA_MEMBER WHERE MEM_NO = #{memNo}) 
	</update>
	<!-- 회원필터, 직무분야 적용한 포지션 리스트 -->
	<select id="positionLoginFilterJobNameList" resultType="position" parameterType="map">
		SELECT P.*, BUS_LOGO, BUS_IMAGES, BUS_ADDRESS, BUS_INDUSTRIAL, BUS_AREA, BUS_COUNTRY,(SELECT COUNT(*) FROM PO_LIKE WHERE LIKE_ID = P.LIKE_ID) AS LIKE_COUNT FROM ENROLL_POSITION P JOIN BUSINESS_INFO B ON P.BUS_NO = B.BUS_NO WHERE SYSDATE <![CDATA[<]]> DEAD_DATE AND JOB_TYPE IN (#{jobName}) AND STATUS = 'Y'
		<choose>
			<when test="country.equals('한국')">
				AND BUS_COUNTRY = #{country} 
				<choose>
					<when test="location.equals('전국')"></when>
					<otherwise>
						AND BUS_AREA = #{location}
					</otherwise>
				</choose>
			</when>
			<otherwise>
				AND BUS_COUNTRY = #{country}
			</otherwise>
		</choose>
		<choose>
			<when test="career.equals('전체')"></when>
			<otherwise>
				AND CAREER = #{career}
			</otherwise>
		</choose>
		<if test="order.equals('최신순')">
			ORDER BY POSITION_NO DESC	
		</if>
		<if test="order.equals('보상금순')">
			ORDER BY POSITION_NO DESC	
		</if>
		<if test="order.equals('인기순')">
			ORDER BY LIKE_COUNT DESC	
		</if> 
	</select>
	<!-- 포지션 정보페이지의 추천채용 포지션리스트 -->
	<select id="recommandPositionList" parameterType="position" resultType="position" resultMap="positionArray">
		SELECT * FROM (SELECT ROWNUM AS RNUM, A.* FROM (SELECT (SELECT COUNT(BUS_NO) FROM ENROLL_POSITION) AS PO_COUNT, P.*, BUS_LOGO, BUS_IMAGES, BUS_ADDRESS, BUS_INDUSTRIAL, BUS_AREA, BUS_COUNTRY,(SELECT COUNT(*) FROM PO_LIKE WHERE LIKE_ID = P.LIKE_ID) AS LIKE_COUNT FROM ENROLL_POSITION P JOIN BUSINESS_INFO B ON P.BUS_NO = B.BUS_NO WHERE SYSDATE <![CDATA[<]]> DEAD_DATE AND STATUS = 'Y' AND P.BUS_NO = #{bus_no} OR B.BUS_AREA = #{bus_area} OR B.BUS_COUNTRY = #{bus_country} ORDER BY 1)A) WHERE RNUM BETWEEN 1 AND 8
	</select>
	<!-- 회사 포지션 리스트 -->
	<select id="companyPositionList" parameterType="_int" resultType="position">
		SELECT P.*, BUS_LOGO, BUS_IMAGES, BUS_ADDRESS, BUS_INDUSTRIAL, BUS_AREA, BUS_COUNTRY, (SELECT COUNT(*) FROM PO_LIKE WHERE LIKE_ID = P.LIKE_ID) AS LIKE_COUNT FROM ENROLL_POSITION P JOIN BUSINESS_INFO B ON P.BUS_NO = B.BUS_NO WHERE SYSDATE <![CDATA[<]]> DEAD_DATE AND STATUS = 'Y' AND P.BUS_NO = #{busNo} ORDER BY POSITION_NO DESC
	</select>
	<!-- 회사 태그 리스트 -->
	<select id="companyTagList" parameterType="_int" resultType="tag">
		SELECT * FROM TAG WHERE BUS_NO = #{busNo}
	</select>
	<!-- 회사소개 정보  -->
	<select id="companyInfo" parameterType="_int" resultType="company" resultMap="companyArray">
		SELECT BUS_NO, BUS_NAME, BUS_COUNTRY, BUS_AREA, BUS_TOTAL_EMP, BUS_INTRODUCE, BUS_LOGO, BUS_IMAGES, NEW_INCOME, ALL_INCOME FROM BUSINESS_INFO WHERE BUS_NO = #{busNo} 
	</select>
	<!-- 북마크정보리스트 -->
	<select id="selectBookMark" parameterType="map" resultType="bookmark">
		SELECT * FROM BOOK_MARK WHERE MEM_NO = #{memNo} AND POSITION_NO = #{positionNo}
	</select>
	<!-- 북마크추가 -->
	<insert id="insertBookMark" parameterType="map">
		INSERT INTO BOOK_MARK VALUES(BOOK_MARK_SEQ.NEXTVAL, #{memNo}, #{positionNo})
	</insert>
	<!-- 북마크제거 -->
	<delete id="deleteBookMark" parameterType="map">
		DELETE FROM BOOK_MARK WHERE MEM_NO = #{memNo} AND POSITION_NO = #{positionNo}
	</delete>
	<!-- 태그의견 저장 -->
	<insert id="insertTagOpinion" parameterType="map">
		INSERT INTO TAG_OPINION VALUES(TAG_OPINION_SEQ.NEXTVAL, #{busNo}, #{tag})
	</insert>
	
	<resultMap type="position" id="positionArray">
		<result column="job_type" property="job_type" typeHandler="StrArray"/>
		<result column="tag" property="tag" typeHandler="StrArray"/>
		<result column="bus_images" property="bus_images" typeHandler="StrArray"/>
	</resultMap>
	
	<resultMap type="company" id="companyArray">
		<result column="bus_images" property="bus_images" typeHandler="StrArray"/>
	</resultMap>
</mapper>
